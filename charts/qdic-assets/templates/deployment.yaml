apiVersion: apps/v1
kind: Deployment
metadata: { name: qdic-assets }
spec:
  replicas: 2
  selector: { matchLabels: { app.kubernetes.io/name: qdic-assets } }
  template:
    metadata: { labels: { app.kubernetes.io/name: qdic-assets } }
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: assets
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ENV
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: ENV } }
            - name: APP_NAME
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: APP_NAME } }
            - name: SITE_NAME
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: SITE_NAME } }
            - name: CONTROLLER_URL
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: CONTROLLER_URL } }
            - name: TENANT_ID
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: TENANT_ID } }
            - name: DATABASE_URL
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: DATABASE_URL } }
            - name: RABBITMQ_URL
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: RABBITMQ_URL } }
            - name: ADVERTISE_ENDPOINT
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: ADVERTISE_ENDPOINT } }
            - name: READINESS_PATH
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: READINESS_PATH } }
            - name: EVENT_PROCESSOR_WORKER_POOL_SIZE
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: EVENT_PROCESSOR_WORKER_POOL_SIZE } }
            - name: EVENT_CONSUMER_WORKER_POOL_SIZE
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: EVENT_CONSUMER_WORKER_POOL_SIZE } }
            - name: REPLICATOR_USER
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: REPLICATOR_USER } }
            - name: REPLICATOR_PASSWORD
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: REPLICATOR_PASSWORD } }
            - name: PUBLICATION_NAME
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: PUBLICATION_NAME } }
            - name: RABBITMQ_EVENTS_QUEUE
              valueFrom: { secretKeyRef: { name: qdic-assets-secrets, key: RABBITMQ_EVENTS_QUEUE } }
          ports: [ { name: http, containerPort: 8080 } ]
          readinessProbe: { httpGet: { path: {{ .Values.env.READINESS_PATH | default "/healthz" | quote }}, port: http }, initialDelaySeconds: 3, periodSeconds: 5 }
---
apiVersion: v1
kind: Secret
metadata: { name: qdic-assets-secrets }
type: Opaque
stringData:
  ENV: {{ .Values.env.ENV | quote }}
  APP_NAME: {{ .Values.env.APP_NAME | quote }}
  SITE_NAME: {{ .Values.env.SITE_NAME | quote }}
  CONTROLLER_URL: {{ .Values.env.CONTROLLER_URL | quote }}
  TENANT_ID: {{ .Values.env.TENANT_ID | quote }}
  DATABASE_URL: {{ .Values.env.DATABASE_URL | quote }}
  RABBITMQ_URL: {{ .Values.env.RABBITMQ_URL | quote }}
  ADVERTISE_ENDPOINT: {{ .Values.env.ADVERTISE_ENDPOINT | quote }}
  READINESS_PATH: {{ .Values.env.READINESS_PATH | quote }}
  EVENT_PROCESSOR_WORKER_POOL_SIZE: {{ .Values.env.EVENT_PROCESSOR_WORKER_POOL_SIZE | quote }}
  EVENT_CONSUMER_WORKER_POOL_SIZE: {{ .Values.env.EVENT_CONSUMER_WORKER_POOL_SIZE | quote }}
  REPLICATOR_PASSWORD: {{ .Values.env.REPLICATOR_PASSWORD | quote }}
  REPLICATOR_USER: {{ .Values.env.REPLICATOR_USER | quote }}
  PUBLICATION_NAME: {{ .Values.env.PUBLICATION_NAME | quote }}
  RABBITMQ_EVENTS_QUEUE: {{ .Values.env.RABBITMQ_EVENTS_QUEUE | quote }}

---
apiVersion: v1
kind: Service
metadata: { name: qdic-assets }
spec:
  type: {{ .Values.service.type }}
  selector: { app.kubernetes.io/name: qdic-assets }
  ports: [ { name: http, port: {{ .Values.service.port }}, targetPort: http } ]
